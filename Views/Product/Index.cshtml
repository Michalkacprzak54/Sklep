@model IEnumerable<SklepMVC.Models.Product>

@{
    ViewData["Title"] = "Produkty";
}

<div class="client-product">
    <div class="find-client">

        @using (Html.BeginForm("Index", "Product", FormMethod.Get))
        {
            <label class="control-label">Wybierz płeć:</label>

            <div>
                <input type="checkbox" id="plec_Mezczyzna" name="plec" value="Mezczyzna" class="form-check-input" @(ViewBag.SelectedPlec != null && ViewBag.SelectedPlec.Contains("Mezczyzna") ? "checked" : "") />
                <label for="plec_Mezczyzna" class="form-check-label">Mężczyzna</label>
            </div>
            <div>
                <input type="checkbox" id="plec_Kobieta" name="plec" value="Kobieta" class="form-check-input" @(ViewBag.SelectedPlec != null && ViewBag.SelectedPlec.Contains("Kobieta") ? "checked" : "") />
                <label for="plec_Kobieta" class="form-check-label">Kobieta</label>
            </div>
            <div>
                <input type="checkbox" id="plec_Unisex" name="plec" value="Unisex" class="form-check-input" @(ViewBag.SelectedPlec != null && ViewBag.SelectedPlec.Contains("Unisex") ? "checked" : "") />
                <label for="plec_Unisex" class="form-check-label">Unisex</label>
            </div>
            <label class="control-label">Czy dla dzieci:</label>

            <label>
                <input type="radio" name="czyDlaDzieci" value="Tak" @(ViewBag.CzyDlaDzieci != null && ViewBag.CzyDlaDzieci.ToString() == "Tak" ? "checked" : "") />
                Tak
            </label>
            <label>
                <input type="radio" name="czyDlaDzieci" value="Nie" @(ViewBag.CzyDlaDzieci != null && ViewBag.CzyDlaDzieci.ToString() == "Nie" ? "checked" : "") />
                Nie
            </label>

            <label for="minPrice">Minimalna cena:</label>
            <input type="number" name="minPrice" id="minPrice" pattern="\d+" title="Wprowadź poprawny format ceny. Np.: 999999" min="0" oninput="validateMinMaxPrices()" />

            <label for="maxPrice">Maksymalna cena:</label>
            <input type="number" name="maxPrice" id="maxPrice" pattern="\d+" title="Wprowadź poprawny format ceny. Np.: 999999" min="0" oninput="validateMinMaxPrices()" />

            <span id="priceValidationMessage" style="color: red;"></span>

            <label class="control-label">Wybierz marki:</label>
            @foreach (var marka in ViewBag.availableBrands)
            {
                <div>
                    <input type="checkbox" id="@($"marka_{marka}")" name="marka" value="@marka" class="form-check-input" @(ViewBag.SelectedBrand != null && ViewBag.SelectedBrand.Contains(marka) ? "checked" : "") />
                    <label class="form-check-label" for="@($"marka_{marka}")">@marka</label>
                </div>
            }

            <button type="submit" id="filtrujButton" class="btn btn-primary">Filtruj</button>
        }




    </div>
    <div class="products-client">
        @if (Model.Any())
        {
            <div class="produkty">
                @foreach (var item in Model)
                {
                    <div class="produkt">
                        <div class="zdjecie">
                            @if (item.Photo != null)
                            {

                                <img class="zdjecie" src="data:image/jpeg;base64,@Convert.ToBase64String(item.Photo)" alt="Zdjęcie" />

                            }
                            else
                            {

                                <img class="shoes_photo" src="~/img/brak_foto.jpg" />

                            }
                        </div>
                        <div class="produkt_info">
                            <h3>@item.Brand</h3>
                            <h3>@item.Model</h3>
                            <p>@item.Color</p>
                            <p>@item.Sex</p>
                            <h3>@string.Format("{0:F2}", double.Parse(item.Price)) zł</h3>
                            <div class="show-d">
                                @Html.ActionLink("Szczegóły", "Details", new { id = item.Id_product })
                            </div>
                        </div>
                    </div>


                }
            </div>
        }
        else
        {
            <h1>Brak produktów</h1>
        }
    </div>
</div>

<script>
    function validateMinMaxPrices() {
        var minPrice = parseInt(document.getElementById("minPrice").value) || 0;
        var maxPrice = document.getElementById("maxPrice").value.trim() === "" ? Infinity : parseInt(document.getElementById("maxPrice").value) || 0;

        var validationMessage = document.getElementById("priceValidationMessage");

        if (maxPrice !== Infinity && maxPrice < minPrice) {
            validationMessage.innerText = "Maksymalna cena nie może być mniejsza niż minimalna cena.";
            document.getElementById("filtrujButton").disabled = true; 
        } else {
            validationMessage.innerText = "";
            document.getElementById("filtrujButton").disabled = false; 
        }
    }

</script>